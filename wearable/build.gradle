/*
 * Copyright 2014 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$rootProject.ext.toolsPluginVersion"
        classpath "com.google.gms:google-services:$rootProject.ext.googleServicesPluginVersion"
    }
}

apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    def Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(file('../version.properties')))

    publishNonDefault true

    defaultConfig {
        applicationId "net.nurik.roman.muzei"
        minSdkVersion 23
        targetSdkVersion rootProject.ext.targetSdkVersion
        renderscriptTargetApi rootProject.ext.targetSdkVersion
        renderscriptSupportModeEnabled true
        ndk.abiFilters 'armeabi-v7a', 'x86'

        versionName versionProps['name']
        versionCode versionProps['codeWear'].toInteger()

        buildConfigField "String", "DEVICE_TYPE", "\"wear\""
    }

    signingConfigs {
        release {
            def Properties localProps = new Properties()
            localProps.load(new FileInputStream(file('../local.properties')))
            def Properties keyProps = new Properties()
            if (localProps['keystore.props.file'] != null) {
                keyProps.load(new FileInputStream(file(localProps['keystore.props.file'])))
            }
            storeFile keyProps["store"] != null ? file(keyProps["store"]) : null
            keyAlias keyProps["alias"] ?: ""
            storePassword keyProps["storePass"] ?: ""
            keyPassword keyProps["pass"] ?: ""
        }
    }

    productFlavors {
        dev {
            // Pre-dex each module and produce an APK to avoid the time consuming dex merging process
            multiDexEnabled true
        }

        prod {
        }
    }

    buildTypes {
        debug {
            versionNameSuffix " Debug"
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard-project.txt')
            signingConfig signingConfigs.release
        }

        publicBeta.initWith(buildTypes.release)
        publicBeta {
            versionNameSuffix " " + versionProps['betaNumber']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile "com.android.support:support-v4:$rootProject.ext.supportLibraryVersion"
    compile "com.google.android.support:wearable:2.0.0-alpha3"
    compile "com.google.android.gms:play-services-wearable:$rootProject.ext.googlePlayServicesVersion"
    compile "com.google.firebase:firebase-crash:$rootProject.ext.googlePlayServicesVersion"
    compile project(':android-client-common')
}

apply plugin: 'com.google.gms.google-services'